// Calculat em size
// @function em
// @param $base {Number} parent font size
// @param $size {Number} wanted font size
// @usage:
// em(14, 20)
// @return {String} em sized size
@function em($base, $size)
  @return ($size / $base) * 1em


// Get z-index
// @function z
// @param $key {String} z-index key
// @usage:
// z(header)
// @return {Number} z-index value
@function z($key)
  @return map-get($z-indexes, $key)


// String unit from a string
//
// @function strip-unit
// @param $number {String} Number with unit
// @usage
// strip-unit(13px)
// @return {Number} unitless number
@function strip-unit($number)
  @return $number / ($number * 0 + 1)


// Generate column
//
// @function col
// @param $column-width {Number} column width
// @param $size {Number} column count
// @param $gutter-size {Number} gutter size
// @param $is-container {Boolean} Is container
//
// @return {String} column width in pixel
@function col($column-width, $size, $gutter-size, $is-container: false)
  $column-count: $size - 1
  $gutter: $gutter-size

  @if length($gutter-size) == 2
    $gutter: nth($gutter-size, 1) + nth($gutter-size, 2)

  @if $is-container == true
    $column-count: $size

  @return ($column-width * $size) + ($gutter * $column-count) * 1px